# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-11-04 20:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Data creazione')),
                ('update_date', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data ultima modifica')),
                ('circumstance_vA', models.IntegerField(choices=[(1, b'in fermata / in sosta'), (2, b'ripartiva dopo una sosta / apriva una portiera'), (3, b'stava parcheggiando'), (4, b'usciva da un parcheggio, da un luogo privato, da una strada vicinale'), (5, b'entrava in un parcheggio, in un luogo privato, in una strada vicinale'), (6, b'si immetteva in una piazza a senso rotatorio'), (7, b'circolava su una piazza a senso rotatorio'), (8, b'tamponava procedendo nello stesso senso e nella stessa fila'), (9, b'procedeva nello stesso senso, ma in una fila diversa'), (10, b'cambiava fila'), (11, b'sorpassava'), (12, b'girava a destra'), (13, b'girava a sinistra'), (14, b'retrocedeva'), (15, b'invadeva la sede stradale riservata alla circolazione in senso inverso'), (16, b'proveniva da destra'), (17, b'non aveva osservato il segnale di precedenza o di semaforo rosso')], db_index=True, default=1, verbose_name='Circostanze incidente A')),
                ('circumstance_vB', models.IntegerField(choices=[(1, b'in fermata / in sosta'), (2, b'ripartiva dopo una sosta / apriva una portiera'), (3, b'stava parcheggiando'), (4, b'usciva da un parcheggio, da un luogo privato, da una strada vicinale'), (5, b'entrava in un parcheggio, in un luogo privato, in una strada vicinale'), (6, b'si immetteva in una piazza a senso rotatorio'), (7, b'circolava su una piazza a senso rotatorio'), (8, b'tamponava procedendo nello stesso senso e nella stessa fila'), (9, b'procedeva nello stesso senso, ma in una fila diversa'), (10, b'cambiava fila'), (11, b'sorpassava'), (12, b'girava a destra'), (13, b'girava a sinistra'), (14, b'retrocedeva'), (15, b'invadeva la sede stradale riservata alla circolazione in senso inverso'), (16, b'proveniva da destra'), (17, b'non aveva osservato il segnale di precedenza o di semaforo rosso')], db_index=True, default=1, verbose_name='Circostanze incidente B')),
                ('damages_vA', models.CharField(max_length=250, verbose_name='Danni visibili A')),
                ('damages_vB', models.CharField(max_length=250, verbose_name='Danni visibili B')),
                ('observations_vA', models.CharField(max_length=250, verbose_name='Osservazioni A')),
                ('observations_vB', models.CharField(max_length=250, verbose_name='Osservazioni B')),
            ],
            options={
                'ordering': ('-creation_date',),
                'verbose_name': 'Sinistro',
                'verbose_name_plural': 'Sinistri',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Data creazione')),
                ('update_date', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data ultima modifica')),
                ('first_name', models.CharField(db_index=True, max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(db_index=True, max_length=50, verbose_name='Cognome')),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Cellulare')),
                ('email', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Email')),
                ('imsi', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='IMSI')),
                ('imei', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='IMEI')),
                ('driving_licence', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Patente')),
            ],
            options={
                'ordering': ('first_name', 'last_name', '-update_date'),
                'verbose_name': 'Conducente',
                'verbose_name_plural': 'Conducenti',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Data creazione')),
                ('update_date', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data ultima modifica')),
                ('license_plate', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Targa')),
                ('brand', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Marca')),
                ('type', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Tipo')),
                ('country', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Nazione immatricolazione')),
                ('insurance_name', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Denominazione polizza')),
                ('insurance_company', models.CharField(blank=True, max_length=50, null=True, verbose_name='Compagnia assicurativa')),
                ('insurance_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Polizza valida dal')),
                ('insurance_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Polizza valida fino al')),
                ('has_damages', models.BooleanField(default=False, help_text='La polizza copre danni materiali?', verbose_name='Danni materiali')),
            ],
            options={
                'ordering': ('-update_date', 'license_plate'),
                'verbose_name': 'Veicolo',
                'verbose_name_plural': 'Veicoli',
            },
        ),
        migrations.AddField(
            model_name='accident',
            name='vehicle_vA',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidents_vA', to='cid.Vehicle', verbose_name='Veicolo A'),
        ),
        migrations.AddField(
            model_name='accident',
            name='vehicle_vB',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidents_vB', to='cid.Vehicle', verbose_name='Veicolo B'),
        ),
    ]
